geom_hline( yintercept = 0 ) +
geom_encircle( data = . %>% filter( cluster_wd2_h3 == "1" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
fill = "1"), alpha = .1 ) +
geom_encircle( data = . %>% filter( cluster_wd2_h3 == "2" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
fill = "2"), alpha = .1 ) +
geom_encircle( data = . %>% filter( cluster_wd2_h3 == "3" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
fill = "3"), alpha = .1 ) +
geom_point( data = . %>% filter( cluster_wd2_h3 == "1" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
color = "1"), alpha = .2 ) +
geom_point( data = . %>% filter( cluster_wd2_h3 == "2" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
color = "2"), alpha = .2 ) +
geom_point( data = . %>% filter( cluster_wd2_h3 == "3" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
color = "3"), alpha = .2 ) +
geom_point( data = . %>% filter( is_elite == "Elite" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
shape = "Elite" ),
size = 3, alpha = .2 ) +
geom_point( data = . %>% filter( is_private == "Private" ),
mapping = aes( x = famd_dim1, y = famd_dim2,
shape = "Private" ),
size = 3, alpha = .2 ) +
scale_shape_manual( observations_guide, values = quali_shapes.vec  ) +
scale_color_manual( "Clusters", values = cluster_colors2.vec ) +
scale_fill_manual( "Clusters", values = cluster_colors2.vec ) +
theme_minimal()
grid.arrange(colleges.ggplot, colleges_h3.ggplot, ncol = 1)
grid.arrange(colleges_h3.ggplot, colleges.p3.ggplot, ncol = 1 )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, cases), by = c("fips" = "fips" ) )
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP )
)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
View(counties.sf)
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) ) %>%
select( GEOID, INTPLAT, INTPLON, geometry, date, fips, cases)
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) ) %>%
select( GEOID, INTPTLAT, INTPTLON, geometry, date, fips, cases)
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c("fips" = "fips" ) )
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c("fips" = "fips" ) )  %>%
select( GEOID, INTPTLAT, INTPTLON, geometry, date, fips, cases)
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c("fips" = "fips" ) )  %>%
eval_select( GEOID, INTPTLAT, INTPTLON, geometry, date, fips, cases)
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c("fips" = "fips" ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c("fips" = "fips" ) )
covid_19_map <- counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype= "dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf( crs = st_crs( 2163 ), xlim = c( -2500000, 2500000 ), ylim = c( -2300000,
730000 ) )
covid_19_map
hawaii  <- counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype="dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf(crs = st_crs(4135), xlim = c(-161, -154), ylim = c(18,
23), expand = FALSE, datum = NA)
alaska <-  counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype="dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf(crs = st_crs(3467), xlim = c(-2400000, 1600000), ylim = c(200000,
2500000), expand = FALSE, datum = NA)
covid_19_map_plus_insets <- covid_19_map +
annotation_custom(
grob = ggplotGrob(alaska),
xmin = -2750000,
xmax = -2750000 + (1600000 - (-2400000))/2.5,
ymin = -2450000,
ymax = -2450000 + (2500000 - 200000)/2.5
) +
annotation_custom(
grob = ggplotGrob(hawaii),
xmin = -1250000,
xmax = -1250000 + (-154 - (-161))*120000,
ymin = -2450000,
ymax = -2450000 + (23 - 18)*120000
)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
install.packages("sf")
install.packages("sf")
install.packages("tigris")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE, tigris_use_cache = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
install.packages("rapiddirs")
tigris_refresh
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate) ;
library(stringr) ;
library(tidyverse) ;
library(RColorBrewer) ;
library(ggalt) ;
library(magrittr) ;
library(tibble) ;
library(grid) ;
library(gridExtra) ;
library(sf) ;
library(tigris) ;
options(tigris_use_cache = TRUE)
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
counties.sf <- counties( class = "sf", progress_bar=FALSE )
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(lubridate)
library(stringr)
library(tidyverse)
library(RColorBrewer)
library(ggalt)
library(magrittr)
library(tibble)
library(grid)
library(gridExtra)
library(sf)
library(tigris)
options(tigris_use_cache = TRUE)
## This sets the default ggplot theme to minimal and selects a
## serifed font similar to the body text
theme_set(theme_minimal(base_family="Times", base_size=10)) ;
## NYTimes Data
covid_19.df <- read_csv( "us-counties.csv",
col_types = cols(
date = col_factor(),
county = col_factor(),
state = col_factor(),
fips = col_factor(),
cases = col_integer(),
deaths = col_integer() ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE, tigris_use_cache = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
counties.sf <- counties( class = "sf", progress_bar = FALSE ) %>%
mutate( fips = paste0( STATEFP,COUNTYFP ) )
counties.sf <- counties.sf %>%
left_join( covid_19.df %>% select(fips, date, cases), by = c( "fips" = "fips" ) )
covid_19_map <- counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype= "dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf( crs = st_crs( 2163 ), xlim = c( -2500000, 2500000 ), ylim = c( -2300000,
730000 ) )
covid_19_map
hawaii_map  <- counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype="dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf(crs = st_crs(4135), xlim = c(-161, -154), ylim = c(18,
23), expand = FALSE, datum = NA)
hawaii_map
alaska_map <-  counties.sf %>%
ggplot() +
geom_sf( mapping = aes( fill = cases ), size=0.25, linetype="dotted" ) +
scale_fill_gradient( low = "white", high = "#CB454A", trans = "log" ) +
coord_sf(crs = st_crs(3467), xlim = c(-2400000, 1600000), ylim = c(200000,
2500000), expand = FALSE, datum = NA)
alaska_map
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tibble)
library(magrittr)
library(extrafont)
library(bookdown)
library(ggbeeswarm)
library(stringr)
library(tidyverse)
library(DescTools)
library(socviz)
library(ggrepel)
library(lubridate)
library(dat)
library(treemapify)
library(iptools)
library(readr)
library(RColorBrewer)
library(factoextra)
library(cluster)
library(ggalt)
library(RColorBrewer)
library(corrplot)
library(dplyr)
library(FactoMineR)
library(PCAmixdata)
library(gridExtra)
library(grid)
library(lattice)
library(purrr)
library(scales)
#Import data
data1 = read_csv("../Data/1519430400_clean.csv",
col_types = cols(
`#IP` = col_character(),
timestamp = col_double(),
updatedat = col_double(),
feed = col_character(),
listcause = col_character(),
ruleid = col_double(),
domain = col_character(),
helo = col_character(),
additional = col_logical(),
asn = col_double(),
bgpprefix = col_character(),
countrycode = col_character() ) )
## data1 = read_csv("../data/1519430400.csv.bz2")
## data2 = read_csv("../data/1519516800.csv.bz2")
## data3 = read_csv("../data/1519603200.csv.bz2")
## data4 = read_csv("../data/1519689600.csv.bz2")
#Convert to data frame
# data1.df <- data.frame(data1)
# data2.df <- data.frame(data2)
# data3.df <- data.frame(data3)
# data4.df <- data.frame(data4)
#Binding rows of all the data frames together
# allData.df <- bindRows(data1.df, data2.df, data3.df, data4.df)
allData.df <- data1 ;
#Create tibble
allData.tib <- as_tibble( allData.df ) %>%
rename( "IP" = "#IP" ) %>%
mutate( "IP_int" = ip_to_numeric( IP )
) %>%
mutate( timestamp.datetime = as_datetime( as.POSIXct( timestamp,
origin="1970-01-01",
tz="GMT")
)
) %>%
mutate(updatedat.datetime = as_datetime( as.POSIXct( updatedat,
origin="1970-01-01",                                                                     tz="GMT")
)
)
sampledIPs.tib <- allData.tib %>%
filter(IP == "179.97.63.132" | IP == "145.239.107.28" | IP == "85.25.159.248" | IP == "190.196.229.116" |
IP == "77.81.143.206" | IP == "172.247.186.132" | IP == "192.151.218.239" | IP == "116.135.179.219" |
IP == "89.163.221.24" | IP == "95.174.27.109" | IP == "177.37.49.12" | IP == "94.46.122.231" |
IP == "94.46.121.122" | IP == "77.89.254.201	" | IP == "207.53.251.12	")  %>%
mutate(IP = factor(IP)) %>%
mutate(timestamp.datetime = factor(timestamp.datetime))  %>%
mutate(bgpprefix = factor(bgpprefix)) %>%
mutate(ruleid = factor(ruleid))  %>%
mutate(listcause =factor(listcause))  %>%
mutate(countrycode = factor(countrycode)) %>%
mutate(feed = factor(feed)) %>%
arrange(IP, timestamp)  %>%
select(IP, IP_int, timestamp, timestamp.datetime, bgpprefix, ruleid, listcause, feed, countrycode)
ip.int.univariate <- sampledIPs.tib %>%
ggplot( mapping = aes( x = IP_int )
) +
geom_density() +
labs( x = "IP_int",
y = "Density",
title = "IP_int Density" )
ruleid.univariate <- sampledIPs.tib %>%
count( ruleid ) %>%
ggplot( aes( fill = ruleid, area = n ) ) +
geom_treemap() +
labs( title = "Ruleid Frequency" )
listcause.univariate <- sampledIPs.tib %>%
count( listcause ) %>%
ggplot( aes( fill = listcause, area = n ) ) +
geom_treemap() +
labs( title = "Listcause Frequency" )
timestamp.univariate <- sampledIPs.tib %>%
ggplot( mapping = aes( x = timestamp ) ) +
geom_density() +
labs( x = "timestamp",
y = "Density",
title = "Timestamp Density" )
grid.arrange(ip.int.univariate, timestamp.univariate, ruleid.univariate,
listcause.univariate, ncol = 2,
top = "Figure 1: Sampled IPs Univaritate Selected Analysis")
setwd("Documents/GitHub/aivibrancy/")
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(stringr)
library(tidyverse)
read.csv("2019aivibrancy")
read.csv("2019indicators.csv")
aiVibrancyIndicators2019 = read.csv("2019indicators.csv")
aiVibrancyIndicators2019.df <- aiVibrancyIndicators2019
aiVibrancyIndicators2019.tib <- as_tibble(aiVibrancyIndicators2019.df)
aiVibrancyIndicators2019 = read.csv("2019indicators.csv")
aiVibrancyIndicators2019.df <- aiVibrancyIndicators2019
(aiVibrancyIndicators2019.tib <- as_tibble(aiVibrancyIndicators2019.df))
View(aiVibrancyIndicators2019)
aiVibrancyIndicators2019 = read.csv("2019indicators.csv")
aiVibrancyIndicators2019.df <- aiVibrancyIndicators2019
(aiVibrancyIndicators2019.tib <- as_tibble(aiVibrancyIndicators2019.df) %>%
mutate(region = factor(region)) %>%
mutate(income.group = factor(income.group,
levels  = c("Lower middle income", "Upper middle income", "High income")))
)
aiVibrancyIndicators2019 = read.csv("2019indicators.csv")
aiVibrancyIndicators2019.df <- aiVibrancyIndicators2019
(aiVibrancyIndicators2019.tib <- as_tibble(aiVibrancyIndicators2019.df)
)
